<?php

/**
 * Baseplaces
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property clob $name
 * @property clob $place_type
 * @property users $user
 * @property sensor_log $log
 * @property sensor_event $event
 * 
 * @method integer      getId()         Returns the current record's "id" value
 * @method clob         getName()       Returns the current record's "name" value
 * @method clob         getPlaceType()  Returns the current record's "place_type" value
 * @method users        getUser()       Returns the current record's "user" value
 * @method sensor_log   getLog()        Returns the current record's "log" value
 * @method sensor_event getEvent()      Returns the current record's "event" value
 * @method places       setId()         Sets the current record's "id" value
 * @method places       setName()       Sets the current record's "name" value
 * @method places       setPlaceType()  Sets the current record's "place_type" value
 * @method places       setUser()       Sets the current record's "user" value
 * @method places       setLog()        Sets the current record's "log" value
 * @method places       setEvent()      Sets the current record's "event" value
 * 
 * @package    h-emergenze
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseplaces extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('places');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('place_type', 'clob', null, array(
             'type' => 'clob',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('users as user', array(
             'local' => 'id',
             'foreign' => 'place_id'));

        $this->hasOne('sensor_log as log', array(
             'local' => 'id',
             'foreign' => 'place_id'));

        $this->hasOne('sensor_event as event', array(
             'local' => 'id',
             'foreign' => 'place_id'));

        $geographical0 = new Doctrine_Template_Geographical(array(
             'latitude' => 
             array(
              'options' => 
              array(
              'scale' => 8,
              ),
             ),
             'longitude' => 
             array(
              'options' => 
              array(
              'scale' => 8,
              ),
             ),
             ));
        $this->actAs($geographical0);
    }
}